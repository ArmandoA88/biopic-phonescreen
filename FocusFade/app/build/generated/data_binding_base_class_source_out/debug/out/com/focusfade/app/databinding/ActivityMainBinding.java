// Generated by view binder compiler. Do not edit!
package com.focusfade.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.focusfade.app.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.slider.Slider;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonResetBlur;

  @NonNull
  public final MaterialButton buttonSettings;

  @NonNull
  public final MaterialButton buttonWhitelist;

  @NonNull
  public final ProgressBar progressBlurLevel;

  @NonNull
  public final Slider sliderBlurGainRate;

  @NonNull
  public final Slider sliderBlurRecoveryRate;

  @NonNull
  public final Slider sliderMaxBlurLevel;

  @NonNull
  public final SwitchMaterial switchServiceEnabled;

  @NonNull
  public final TextView textBlurGainRate;

  @NonNull
  public final TextView textBlurRecoveryRate;

  @NonNull
  public final TextView textCurrentBlurLevel;

  @NonNull
  public final TextView textMaxBlurLevel;

  @NonNull
  public final TextView textNextReset;

  @NonNull
  public final TextView textServiceStatus;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull MaterialButton buttonResetBlur,
      @NonNull MaterialButton buttonSettings, @NonNull MaterialButton buttonWhitelist,
      @NonNull ProgressBar progressBlurLevel, @NonNull Slider sliderBlurGainRate,
      @NonNull Slider sliderBlurRecoveryRate, @NonNull Slider sliderMaxBlurLevel,
      @NonNull SwitchMaterial switchServiceEnabled, @NonNull TextView textBlurGainRate,
      @NonNull TextView textBlurRecoveryRate, @NonNull TextView textCurrentBlurLevel,
      @NonNull TextView textMaxBlurLevel, @NonNull TextView textNextReset,
      @NonNull TextView textServiceStatus) {
    this.rootView = rootView;
    this.buttonResetBlur = buttonResetBlur;
    this.buttonSettings = buttonSettings;
    this.buttonWhitelist = buttonWhitelist;
    this.progressBlurLevel = progressBlurLevel;
    this.sliderBlurGainRate = sliderBlurGainRate;
    this.sliderBlurRecoveryRate = sliderBlurRecoveryRate;
    this.sliderMaxBlurLevel = sliderMaxBlurLevel;
    this.switchServiceEnabled = switchServiceEnabled;
    this.textBlurGainRate = textBlurGainRate;
    this.textBlurRecoveryRate = textBlurRecoveryRate;
    this.textCurrentBlurLevel = textCurrentBlurLevel;
    this.textMaxBlurLevel = textMaxBlurLevel;
    this.textNextReset = textNextReset;
    this.textServiceStatus = textServiceStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonResetBlur;
      MaterialButton buttonResetBlur = ViewBindings.findChildViewById(rootView, id);
      if (buttonResetBlur == null) {
        break missingId;
      }

      id = R.id.buttonSettings;
      MaterialButton buttonSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonSettings == null) {
        break missingId;
      }

      id = R.id.buttonWhitelist;
      MaterialButton buttonWhitelist = ViewBindings.findChildViewById(rootView, id);
      if (buttonWhitelist == null) {
        break missingId;
      }

      id = R.id.progressBlurLevel;
      ProgressBar progressBlurLevel = ViewBindings.findChildViewById(rootView, id);
      if (progressBlurLevel == null) {
        break missingId;
      }

      id = R.id.sliderBlurGainRate;
      Slider sliderBlurGainRate = ViewBindings.findChildViewById(rootView, id);
      if (sliderBlurGainRate == null) {
        break missingId;
      }

      id = R.id.sliderBlurRecoveryRate;
      Slider sliderBlurRecoveryRate = ViewBindings.findChildViewById(rootView, id);
      if (sliderBlurRecoveryRate == null) {
        break missingId;
      }

      id = R.id.sliderMaxBlurLevel;
      Slider sliderMaxBlurLevel = ViewBindings.findChildViewById(rootView, id);
      if (sliderMaxBlurLevel == null) {
        break missingId;
      }

      id = R.id.switchServiceEnabled;
      SwitchMaterial switchServiceEnabled = ViewBindings.findChildViewById(rootView, id);
      if (switchServiceEnabled == null) {
        break missingId;
      }

      id = R.id.textBlurGainRate;
      TextView textBlurGainRate = ViewBindings.findChildViewById(rootView, id);
      if (textBlurGainRate == null) {
        break missingId;
      }

      id = R.id.textBlurRecoveryRate;
      TextView textBlurRecoveryRate = ViewBindings.findChildViewById(rootView, id);
      if (textBlurRecoveryRate == null) {
        break missingId;
      }

      id = R.id.textCurrentBlurLevel;
      TextView textCurrentBlurLevel = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentBlurLevel == null) {
        break missingId;
      }

      id = R.id.textMaxBlurLevel;
      TextView textMaxBlurLevel = ViewBindings.findChildViewById(rootView, id);
      if (textMaxBlurLevel == null) {
        break missingId;
      }

      id = R.id.textNextReset;
      TextView textNextReset = ViewBindings.findChildViewById(rootView, id);
      if (textNextReset == null) {
        break missingId;
      }

      id = R.id.textServiceStatus;
      TextView textServiceStatus = ViewBindings.findChildViewById(rootView, id);
      if (textServiceStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, buttonResetBlur, buttonSettings,
          buttonWhitelist, progressBlurLevel, sliderBlurGainRate, sliderBlurRecoveryRate,
          sliderMaxBlurLevel, switchServiceEnabled, textBlurGainRate, textBlurRecoveryRate,
          textCurrentBlurLevel, textMaxBlurLevel, textNextReset, textServiceStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
