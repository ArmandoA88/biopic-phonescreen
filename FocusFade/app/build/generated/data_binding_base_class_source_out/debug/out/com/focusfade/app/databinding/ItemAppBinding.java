// Generated by view binder compiler. Do not edit!
package com.focusfade.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.focusfade.app.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAppBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonAction;

  @NonNull
  public final ImageView imageAppIcon;

  @NonNull
  public final TextView textAppName;

  @NonNull
  public final TextView textPackageName;

  @NonNull
  public final TextView textStatus;

  private ItemAppBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton buttonAction,
      @NonNull ImageView imageAppIcon, @NonNull TextView textAppName,
      @NonNull TextView textPackageName, @NonNull TextView textStatus) {
    this.rootView = rootView;
    this.buttonAction = buttonAction;
    this.imageAppIcon = imageAppIcon;
    this.textAppName = textAppName;
    this.textPackageName = textPackageName;
    this.textStatus = textStatus;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAppBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_app, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAppBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAction;
      MaterialButton buttonAction = ViewBindings.findChildViewById(rootView, id);
      if (buttonAction == null) {
        break missingId;
      }

      id = R.id.imageAppIcon;
      ImageView imageAppIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageAppIcon == null) {
        break missingId;
      }

      id = R.id.textAppName;
      TextView textAppName = ViewBindings.findChildViewById(rootView, id);
      if (textAppName == null) {
        break missingId;
      }

      id = R.id.textPackageName;
      TextView textPackageName = ViewBindings.findChildViewById(rootView, id);
      if (textPackageName == null) {
        break missingId;
      }

      id = R.id.textStatus;
      TextView textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      return new ItemAppBinding((MaterialCardView) rootView, buttonAction, imageAppIcon,
          textAppName, textPackageName, textStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
